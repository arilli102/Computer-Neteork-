Aim:
 The capture and display ethernet frame information including destination MAC address, source MAC address, and protocol type using raw sockets in python.

Algorithm:

1. Get the host ip address of the current machine.
2. Create a new socket with AF_INET and sock_RAW to capture packets.
3. Bind the scoket options to include IP headers and enable promiscuous continualls form the socket.
4. Receive packets continually from the socket.
5. Extract ethernet froma data by unpackeong the first 14 bytes.


Program:

import socket
import struct
import binascii
import textwrap

def main():
    # Get host
    host = socket.gethostbyname(socket.gethostname())
    print('IP: {}'.format(host))

    # Create a raw socket and bind it
    conn = socket.socket(socket.AF_INET, socket.SOCK_RAW, socket.IPPROTO_IP)
    conn.bind((host, 0))

    # Include IP headers
    conn.setsockopt(socket.IPPROTO_IP, socket.IP_HDRINCL, 1)
    # Enable promiscuous mode
    conn.ioctl(socket.SIO_RCVALL, socket.RCVALL_ON)

    while True:
        # Recive data
        raw_data, addr = conn.recvfrom(65536)

        # Unpack data
        dest_mac, src_mac, eth_proto, data = ethernet_frame(raw_data)

        print('\nEthernet Frame:')
        print("Destination MAC: {}".format(dest_mac))
        print("Source MAC: {}".format(src_mac))
        print("Protocol: {}".format(eth_proto))

# Unpack ethernet frame
def ethernet_frame(data):
    dest_mac, src_mac, proto = struct.unpack('!6s6s2s', data[:14])
    return get_mac_addr(dest_mac), get_mac_addr(src_mac), get_protocol(proto), data[14:]

# Return formatted MAC address AA:BB:CC:DD:EE:FF
def get_mac_addr(bytes_addr):
    bytes_str = map('{:02x}'.format, bytes_addr)
    mac_address = ':'.join(bytes_str).upper()
    return mac_address

# Return formatted protocol ABCD
def get_protocol(bytes_proto):
    bytes_str = map('{:02x}'.format, bytes_proto)
    protocol = ''.join(bytes_str).upper()
    return protocol
main()




IP: 192.168.1.7

Ethernet Frame:
Destination MAC: FF:FF:FF:FF:FF:FF
Source MAC: 08:00:27:12:34:56
Protocol: 0800

Ethernet Frame:
Destination MAC: 00:1A:2B:3C:4D:5E
Source MAC: 40:16:7E:89:AB:CD
Protocol: 86DD


Result:

Thus, the program to capture and display Ethernet frame details using raw sockets was successfully implemented and executed.
